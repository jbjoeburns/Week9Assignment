{"ast":null,"code":"import { writeCookie } from \"../common\";\nimport { getCookie } from '../common';\nexport const loginUser = async (username, email, password, newUser) => {\n  try {\n    const response = await fetch(\"http://localhost:5001/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"username\": username,\n        \"email\": email,\n        \"password\": password\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n    newUser(data.user.username);\n    writeCookie(\"jwt_token\", data.user.token, 7);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const registerUser = async (username, email, password, newUser) => {\n  try {\n    const response = await fetch(\"http://localhost:5001/users/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"username\": username,\n        \"email\": email,\n        \"password\": password\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n    newUser(data.user.username);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const authCheck = async jwtToken => {\n  try {\n    const response = await fetch(\"http://localhost:5001/users/authcheck\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${jwtToken}`\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    return data.user.username;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const provideDetails = async (realname, address, newUser, jwtToken) => {\n  try {\n    // do get to get ID\n    let jwt = getCookie(\"jwt_token\");\n    const getresponse = await fetch(\"http://localhost:5001/users/getallusers\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${jwtToken}`\n      }\n    });\n    const getdata = await getresponse.json();\n    const response = await fetch(\"http://localhost:5001/data/additionaldetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"realname\": realname,\n        \"address\": address,\n        \"UserId\": getdata.user.UserId\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n    newUser(data.user.username);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["writeCookie","getCookie","loginUser","username","email","password","newUser","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","user","token","error","registerUser","authCheck","jwtToken","provideDetails","realname","address","jwt","getresponse","getdata","UserId"],"sources":["C:/Users/joe-b/Documents/codenation/week9/s1reactapp/src/utils/index.js"],"sourcesContent":["import { writeCookie } from \"../common\";\r\nimport { getCookie } from '../common';\r\n\r\nexport const loginUser = async(username,email,password,newUser)=>{\r\n    try{\r\n        const response = await fetch(\"http://localhost:5001/users/login\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": username,\r\n                \"email\": email,\r\n                \"password\": password\r\n            })\r\n        })\r\n        const data = await response.json()\r\n        console.log(data);\r\n        newUser(data.user.username)\r\n        writeCookie(\"jwt_token\", data.user.token, 7)\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const registerUser = async(username,email,password,newUser)=>{\r\n    try{\r\n        const response = await fetch(\"http://localhost:5001/users/register\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": username,\r\n                \"email\": email,\r\n                \"password\": password\r\n            })\r\n        })\r\n        const data = await response.json()\r\n        console.log(data);\r\n        newUser(data.user.username)\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const authCheck = async (jwtToken) => {\r\n    try {\r\n        const response = await fetch(\"http://localhost:5001/users/authcheck\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${jwtToken}`\r\n            }\r\n        })\r\n        const data = await response.json()\r\n        console.log(data)\r\n        return data.user.username\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const provideDetails = async(realname,address,newUser,jwtToken)=>{\r\n    try{\r\n        // do get to get ID\r\n        let jwt = getCookie(\"jwt_token\")\r\n        const getresponse = await fetch(\"http://localhost:5001/users/getallusers\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${jwtToken}`\r\n            }\r\n        })\r\n        const getdata = await getresponse.json()\r\n        const response = await fetch(\"http://localhost:5001/data/additionaldetails\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"realname\": realname,\r\n                \"address\": address,\r\n                \"UserId\": getdata.user.UserId\r\n            })\r\n        })\r\n        const data = await response.json()\r\n        console.log(data);\r\n        newUser(data.user.username)\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}